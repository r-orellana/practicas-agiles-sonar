name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  check-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Run linters and formatters
        run: |
          echo "Running isort..." && isort . --check
          echo "Running black..." && black . --check
          echo "Running flake8..." && flake8 . --benchmark
      - name: Run tests
        run: |
          echo "Running tests" && python -m coverage run -m pytest -v
          echo "Coverage report" && python -m coverage report -m

  check-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2
        with:
          node-version: 12.x
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: frontend
      - name: Run linter
        run: npm run lint
        working-directory: frontend
      - name: Run production build
        run: npm run build
        working-directory: frontend
      - name: Run unit tests
        run: npm run test:ci
        working-directory: frontend

  # deploy:
  #   if: | 
  #     github.ref == 'refs/heads/main' && 
  #     !contains(github.event.head_commit.message, 'skip-ci')
  #   runs-on: ubuntu-latest
  #   needs: [check-backend, check-frontend]

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 14.17
  #     - name: Install SSH Key
  #       uses: shimataro/ssh-key-action@v2.3.1
  #       with:
  #         key: ${{ secrets.STAGING_SSH }}
  #         known_hosts: ${{ secrets.KNOWN_HOSTS }}
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Deploy on Staging
  #       run: npx shipit staging deploy
